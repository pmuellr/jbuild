// Generated by CoffeeScript 1.6.3
(function() {
  var HelpTasks, PROGRAM, Tasks, alignLeft, coffee, fs, help, log, logError, main, path, _,
    __slice = [].slice,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  fs = require("fs");

  path = require("path");

  _ = require("underscore");

  coffee = require("coffee-script");

  require("shelljs/global");

  PROGRAM = path.basename(__filename).split(".")[0];

  Tasks = null;

  HelpTasks = ["help", "?", "-?", "-h", "--h", "--help"];

  exports.main = main = function() {
    var args, err, jmod, name, task, taskObj;
    task = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    if (!test("-f", "jbuild.js") && !test("-f", "jbuild.coffee")) {
      if (__indexOf.call(HelpTasks, task) >= 0) {
        help();
      } else {
        logError(null, "jbuild.js not found in current dir; use `jbuild help` for help");
      }
    }
    try {
      jmod = require("" + (path.join(process.cwd(), 'jbuild')));
    } catch (_error) {
      err = _error;
      logError(err, "unable to load module jbuild: " + err);
    }
    Tasks = {};
    for (name in jmod) {
      taskObj = jmod[name];
      if (!_.isFunction(taskObj.run)) {
        logError(null, "the run property of task " + name + " is not a function");
      }
      taskObj.name = name;
      if (taskObj.doc == null) {
        taskObj.doc = "???";
      }
      Tasks[name] = taskObj;
    }
    if ((task == null) || __indexOf.call(HelpTasks, task) >= 0) {
      help();
    }
    if (Tasks[task] == null) {
      logError(null, "unknown task '" + task + "'; use `jbuild help` for help");
    }
    try {
      Tasks[task].run.apply(null, args);
    } catch (_error) {
      err = _error;
      logError(err, "running task " + task);
    }
  };

  log = function(message) {
    if ((message == null) || message === "") {
      console.log("");
    } else {
      console.log("" + PROGRAM + ": " + message);
    }
  };

  logError = function(err, message) {
    log("error: " + message);
    if (err) {
      console.log("stack:");
      console.log(err.stack);
    }
    process.exit(1);
  };

  help = function() {
    var doc, longestNamedTask, maxTaskNameLen, name, task, tasks, _i, _len;
    console.log("usage: " + PROGRAM + " task arg arg arg ...\n\nRun a task from ./jbuild.js or ./jbuild.coffee, passing the\nappropriate args.\n\nThe tasks should be exported from the jsbuild module.");
    if (Tasks == null) {
      process.exit(1);
    }
    console.log("\nAvailable tasks from your jbuild module:\n");
    tasks = _.values(Tasks);
    longestNamedTask = _.max(tasks, function(task) {
      return task.name.length;
    });
    maxTaskNameLen = longestNamedTask.name.length;
    for (_i = 0, _len = tasks.length; _i < _len; _i++) {
      task = tasks[_i];
      name = task.name;
      doc = task.doc;
      console.log("   " + (alignLeft(name, maxTaskNameLen)) + " - " + doc);
    }
    return process.exit(1);
  };

  alignLeft = function(s, len) {
    while (s.length < len) {
      s += " ";
    }
    return s;
  };

  if (require.main === module) {
    main.apply(null, process.argv.slice(2));
  }

}).call(this);
